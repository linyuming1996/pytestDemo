{"name": "测试用例：【查询成员邮件】", "status": "broken", "statusDetails": {"message": "TypeError: PreparedRequest.prepare_body() missing 2 required positional arguments: 'data' and 'files'", "trace": "self = <testcases.api_test.test_01_search.TestSearchMails object at 0x0000020A2E964EB0>\nmailbox_ids = 32895, start_time = 1, end_time = 1895170115, folders = ''\nfilters = '', has_attachment = '', send = '', to = '', subject = '', body = ''\nattachment = '', keyword = '', with_body = '', with_category = ''\npage_size = '', page_token = '', except_result = True, except_code = 0\nexcept_msg = 'OK'\n\n    @allure.story(\"用例--查询成员邮件\")\n    @allure.description(\"该用例是针对获取用户修改接口的测试\")\n    @allure.issue(\"https://www.email.wps.cn\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"测试用例：【查询成员邮件】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"mailbox_ids, start_time, end_time, folders, filters,has_attachment,send,to,subject,\"\n                             \"body, attachment, keyword, with_body, with_category, page_size, page_token, \"\n                             \"except_result,except_code,except_msg\",\n                             api_data[\"test_search_mails\"])\n    # @pytest.mark.usefixtures(\"update_user_telephone\")\n    def test_SearchMails(self, mailbox_ids, start_time, end_time, folders, filters, has_attachment, send, to, subject,\n                         body, attachment, keyword, with_body, with_category, page_size, page_token, except_result,\n                         except_code, except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        step_1()\n>       result = search_mails(mailbox_ids, start_time, end_time, folders, filters, has_attachment, send, to, subject,\n                              body, attachment, keyword, with_body, with_category, page_size, page_token)\n\ntest_01_search.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmailbox_ids = 32895, start_time = 1, end_time = 1895170115, folders = ''\nfilters = '', has_attachment = '', send = '', to = '', subject = '', body = ''\nattachment = '', keyword = '', with_body = '', with_category = ''\npage_size = '', page_token = ''\n\n    def search_mails(mailbox_ids, start_time, end_time, folders, filters, has_attachment, send, to, subject, body,\n                     attachment,\n                     keyword, with_body, with_category, page_size, page_token):\n        \"\"\"\n        根据用户ID，修改用户信息\n        :param mailbox_ids: 用户ID\n        :param start_time: 邮件的起始时间戳（单位秒），默认为1\n        :param end_time: 邮件的结束时间戳（单位秒），须大于start_time。默认无穷大\n        :param folders: 目录ID列表，限制搜索目录范围。默认搜索所有目录，多个账号用,号分割\n        :param filter: Items Enum: \"unread\" \"flagged\"邮件筛选条件，默认为all\n        :param has_attachment: true筛选包含附件，false筛选不包含附件。默认不筛选\n        :param send: 发件人搜索,支持邮箱地址、用户名搜索，默认不筛选，多个使用空格分割\n        :param to: 收件人搜索，支持邮箱地址、用户名搜索，默认不筛选，这里包含收件人，抄送，密送人搜索，多个使用空格分割\n        :param subject: 邮件主题搜索，默认不搜索\n        :param body: 邮件正文搜索，支持模糊搜索，默认不搜索\n        :param attachment: 邮件附件名称搜索,支持模糊搜索，默认不搜索\n        :param keyword: 关键字搜索,支持模糊搜索\n        :param with_body: 是否需要邮件体。默认返回的body字段为空串\n        :param with_category: 是否需要分类字段。默认不返回categories字段\n        :param page_size: 分页大小，默认取10\n        :param page_token: 翻页token，首次无需提供\n        :param sid: 用户token\n        :return: 自定义的关键字返回结果 result\n        \"\"\"\n        result = ResultBase()\n        header = {\n            \"Content-Type\": \"application/json\",\n            \"cookie\": sid\n        }\n        json_data = {\n            \"mailbox_ids\": int(mailbox_ids),\n            \"start_time\": int(start_time),\n            \"end_time\": int(end_time),\n            \"folders\": folders,\n            \"filter\": filters,\n            \"has_attachment\": has_attachment,\n            \"from\": send,\n            \"to\": to,\n            \"subject\": subject,\n            \"body\": body,\n            \"attachment\": attachment,\n            \"keyword\": keyword,\n            \"with_body\": with_body,\n            \"with_category\": with_category,\n            \"page_size\": page_size,\n            \"page_token\": page_token\n        }\n        res = search.search(json=json_data, headers=header)\n        logger.info(\"查询邮件==>>请求头==>> {}\".format(res.request.headers))\n>       logger.info(\"查询邮件==>>请求体==>> {}\".format(res.request.prepare_body()))\nE       TypeError: PreparedRequest.prepare_body() missing 2 required positional arguments: 'data' and 'files'\n\n..\\..\\operation\\search.py:61: TypeError"}, "description": "该用例是针对获取用户修改接口的测试", "steps": [{"name": "步骤1 ==>> 登录邮箱", "status": "passed", "start": 1714997208566, "stop": 1714997208566}], "attachments": [{"name": "log", "source": "bdbf2d00-cb6d-4aa5-a411-bb265e8da6fb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "3abf4506-a447-4344-a6e7-d00a761c2e5c-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "mailbox_ids", "value": "32895"}, {"name": "start_time", "value": "1"}, {"name": "end_time", "value": "1895170115"}, {"name": "folders", "value": "''"}, {"name": "filters", "value": "''"}, {"name": "has_attachment", "value": "''"}, {"name": "send", "value": "''"}, {"name": "to", "value": "''"}, {"name": "subject", "value": "''"}, {"name": "body", "value": "''"}, {"name": "attachment", "value": "''"}, {"name": "keyword", "value": "''"}, {"name": "with_body", "value": "''"}, {"name": "with_category", "value": "''"}, {"name": "page_size", "value": "''"}, {"name": "page_token", "value": "''"}, {"name": "except_result", "value": "True"}, {"name": "except_code", "value": "0"}, {"name": "except_msg", "value": "'OK'"}], "start": 1714997208565, "stop": 1714997208744, "uuid": "c7fa9dd9-b491-4795-bf62-8e0989ec9a03", "historyId": "64e0b3ddc2fa54a3e2cdad6ae34d23ed", "testCaseId": "0a240d0e8d79c8f0fdc1349e85ac50fc", "fullName": "testcases.api_test.test_01_search.TestSearchMails#test_SearchMails", "labels": [{"name": "severity", "value": "trivial"}, {"name": "feature", "value": "查询用户邮件"}, {"name": "story", "value": "用例--查询成员邮件"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_01_search"}, {"name": "subSuite", "value": "TestSearchMails"}, {"name": "host", "value": "SK-20220105RBTF"}, {"name": "thread", "value": "19476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_01_search"}], "links": [{"type": "tms", "url": "https://www.cnblogs.com/wintest", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://www.email.wps.cn", "name": "点击，跳转到对应BUG的链接地址"}]}